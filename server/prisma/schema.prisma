// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "./docs"
}

generator class_validator {
  provider = "prisma-class-validator-generator"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model meta {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           Int      @id @default(autoincrement())
  profile_img  Image?   @relation(name: "ImageToUser")
  username     String   @unique
  post_allowed Boolean  @default(false)
  current_post Post?    @relation(name: "PostToUser")
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Post {
  author     User       @relation(name: "PostToUser", fields: [author_id], references: [id])
  author_id  Int        @unique
  id         Int        @id @default(autoincrement())
  title      String
  published  Boolean    @default(false)
  content    Content?   @relation(name: "content")
  reactions  Response[] @relation(name: "reactions")
  created_at DateTime   @default(now())
}

model Image {
  user    User   @relation(name: "ImageToUser", fields: [user_id], references: [id])
  user_id Int    @unique
  id      Int    @id @default(autoincrement())
  alt     String
  src     Bytes
}

model Content {
  content_id   Int      @id @default(autoincrement())
  post         Post     @relation(name: "content", fields: [post_id], references: [id])
  post_id      Int      @unique
  content_path String
  alt          String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Response {
  response_id   Int      @id @default(autoincrement())
  post          Post     @relation(name: "reactions", fields: [post_id], references: [id])
  post_id       Int
  response_path String
  alt           String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}
